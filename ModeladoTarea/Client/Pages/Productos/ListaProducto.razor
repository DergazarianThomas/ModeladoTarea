@page "/Productos"
@inject IHttpServicio http

<PageTitle> Lista de Productos</PageTitle>

<HeadContent>


</HeadContent>


<body>
    <h3 class="text-center">ListaProductos</h3>

    <a class="btn btn-primary" href="/productos/agregar">Crear producto</a>


    <table>
        <tr>
            <th> Codigo </th>
            <th> Nombre</th>
            <th> Categoria</th>
            <th> Descripcion</th>
            <th> Precio</th>
            <th> Cantidad</th>
        </tr>
        @if(error)
        {
            
        }
        else
        {
            @if (productos == null)
            {
                <tr> Cargando....</tr>
            }
            else if (productos.Count == 0)
            {
                <tr> No existen datos</tr>
            }
            else
            {
                @foreach (var item in productos)
                {
                    <tr>
                        <td>@item.codigo</td>
                        <td>@item.nombre</td>
                        <td>@item.categoriaId</td>
                        <td>@item.descripcion</td>
                        <td>@item.precio</td>
                        <td>@item.cantidad</td>
                        <td>
                            <a class="btn btn-primary" href="/Productos/editar/@item.id">

                                editar

                            </a>
                        </td>
                        <td>
                            <a class="btn btn-primary" @onclick="()=>Eliminar(item)">

                                Borrar

                            </a>
                        </td>
                    </tr>

                }
            }
        }
        


    </table>

    <Confirmar @ref="confirmar"
                  verCancelar="true"
                  verOk="true"
                  textOk="Aceptar"
                  Titulo="Borrar Pago"
                  onCancel="Cancelar"
                  onConfirm="Borrar">

        <div>
            <p>Está por borrar el pago @ProductoBorrar.nombre</p>
            <br />
            <p>¿Está seguro que desea continuar?</p>
        </div>
    </Confirmar>






</body>



@code {
    Confirmar confirmar;
    List<Producto>? productos;
    bool error = false;
    string mensaje = "";
    Producto ProductoBorrar;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()
    {
        productos = null;

        var respuesta = await http.Get<List<Producto>>("api/Producto");

        error = respuesta.Error;

        if (!respuesta.Error)
        {
            productos = respuesta.Respuesta;
        }
        else
        {
            mensaje = await respuesta.ObtenerError();
        }
    }

    private async Task Eliminar(Producto productoBorrar)
    {
        ProductoBorrar = productoBorrar;
        confirmar.Ver();
    }

    private void Cancelar()
    {
        confirmar.Ocultar();
        ProductoBorrar = null;
    }

    private async Task Borrar()
    {
        var respuesta = await http.Delete($"api/Producto/{ProductoBorrar.id}");
        if (respuesta.Error)
        {
            var body = "Error, no se puede borrar el producto";
        }

        Cancelar();
        await Leer();
    }
}